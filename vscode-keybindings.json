// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },

    //
    // SUGGESTIONS AND AUTOCOMPLETION SHORTCUTS
    //

    // Selects the next or previous suggestion in the suggestions widget when visible.
    {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },

    // Selects the next or previous item in the Quick Open dialog when open
    {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
    },
    {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
    },

    // Selects the next or previous code action in the dialog when open
    {
        "key": "ctrl+j",
        "command": "selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    

    //
    // VIM STYLE KEYBINDINGS FOR JUPYTER NOTEBOOK
    //

    {
        "key": "o",
        "command": "notebook.cell.insertCodeCellBelowAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "shift+o",
        "command": "notebook.cell.insertCodeCellAboveAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "y",
        "command": "notebook.cell.copy",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "d d",
        "command": "notebook.cell.cut",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "p",
        "command": "notebook.cell.paste",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "c",
        "command": "notebook.cell.changeToCode",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
    },
    {
        "key": "z c",
        "command": "notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "z o",
        "command": "notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+p",
        "command": "notebook.cell.pasteAbove",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "alt+j",
        "command": "notebook.cell.moveDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "alt+k",
        "command": "notebook.cell.moveUp",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "i",
        "command": "notebook.cell.edit",
        "when": "notebookCellListFocused && notebookEditable && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "z z",
        "command": "notebook.centerActiveCell",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "u",
        "command": "undo",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },

    // Remove conflicting
    {
        "key": "a",
        "command": "-notebook.cell.insertCodeCellAboveAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "b",
        "command": "-notebook.cell.insertCodeCellBelowAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "o",
        "command": "-notebook.cell.toggleOutputs",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "x",
        "command": "-notebook.cell.cut",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "d d",
        "command": "-notebook.cell.delete",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "c",
        "command": "-notebook.cell.copy",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
       "key": "v",
        "command": "-notebook.cell.paste",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "y",
        "command": "-notebook.cell.changeToCode",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-notebook.cell.pasteAbove",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-notebook.centerActiveCell",
        "when": "notebookEditorFocused"
    },
    {
        "key": "z",
        "command": "-undo",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    
    //
    // FILE EXPLORER NAVIGATION
    //
    
    {
        "key": "\\",
        "command": "workbench.view.explorer",
        "when": "neovim.mode == 'normal'"
    },
    {
        "key": "\\",
        "command": "workbench.action.closeSidebar",
        "when": "filesExplorerFocus"
    },
    

    //
    // PANE NAVIGATION
    //
    
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "!inQuickOpen && !suggestWidgetVisible && !codeActionMenuVisible && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "!inQuickOpen && !suggestWidgetVisible && !codeActionMenuVisible && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "!terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "!terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+shift+x",
        "command": "-workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "ctrl+shift+x",
        "command": "workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "-workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
    }
    
    //
    // COMMANDS AND QUICK OPEN
    //

    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands"
    },
    {
      "key": "ctrl+0",
      "command": "-workbench.action.focusSideBar"
    },
    {
      "key": "ctrl+shift+0",
      "command": "editor.foldAll",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+0",
      "command": "-editor.foldAll",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
    // Not working properly. Some key combination make it open to the side
        "key": "ctrl+l",
        "command": "quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },

    //
    // STATUS BAR NAVIGATION
    //
    {
        "key": "l",
        "command": "workbench.statusBar.focusNext",
        "when": "statusBarFocused"
    },
    {
        "key": "h",
        "command": "workbench.statusBar.focusPrevious",
        "when": "statusBarFocused"
    },

    //
    // BREADCRUMBS NAVIGATION
    //
    {
        "key": "l",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+l",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "h",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+h",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "l",
        "command": "list.expand",
        "when": "listFocus && treeElementCanExpand && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasChild && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "h",
        "command": "list.collapse",
        "when": "listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+l",
        "command": "breadcrumbs.focusNextWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+h",
        "command": "breadcrumbs.focusPreviousWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },

    //
    // TERMINAL
    //
    {
        "key": "ctrl+f12",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
]
